"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createScraper;
var _assertNever = require("../assertNever");
var _definitions = require("../definitions");
var _amex = _interopRequireDefault(require("./amex"));
var _behatsdaa = _interopRequireDefault(require("./behatsdaa"));
var _beinleumi = _interopRequireDefault(require("./beinleumi"));
var _beyahadBishvilha = _interopRequireDefault(require("./beyahad-bishvilha"));
var _discount = _interopRequireDefault(require("./discount"));
var _hapoalim = _interopRequireDefault(require("./hapoalim"));
var _isracard = _interopRequireDefault(require("./isracard"));
var _leumi = _interopRequireDefault(require("./leumi"));
var _massad = _interopRequireDefault(require("./massad"));
var _max = _interopRequireDefault(require("./max"));
var _mercantile = _interopRequireDefault(require("./mercantile"));
var _mizrahi = _interopRequireDefault(require("./mizrahi"));
var _oneZero = _interopRequireDefault(require("./one-zero"));
var _otsarHahayal = _interopRequireDefault(require("./otsar-hahayal"));
var _pagi = _interopRequireDefault(require("./pagi"));
var _unionBank = _interopRequireDefault(require("./union-bank"));
var _visaCal = _interopRequireDefault(require("./visa-cal"));
var _yahav = _interopRequireDefault(require("./yahav"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function createScraper(options) {
  switch (options.companyId) {
    case _definitions.CompanyTypes.hapoalim:
      return new _hapoalim.default(options);
    case _definitions.CompanyTypes.leumi:
      return new _leumi.default(options);
    case _definitions.CompanyTypes.beyahadBishvilha:
      return new _beyahadBishvilha.default(options);
    case _definitions.CompanyTypes.mizrahi:
      return new _mizrahi.default(options);
    case _definitions.CompanyTypes.discount:
      return new _discount.default(options);
    case _definitions.CompanyTypes.mercantile:
      return new _mercantile.default(options);
    case _definitions.CompanyTypes.otsarHahayal:
      return new _otsarHahayal.default(options);
    case _definitions.CompanyTypes.visaCal:
      return new _visaCal.default(options);
    case _definitions.CompanyTypes.max:
      return new _max.default(options);
    case _definitions.CompanyTypes.isracard:
      return new _isracard.default(options);
    case _definitions.CompanyTypes.amex:
      return new _amex.default(options);
    case _definitions.CompanyTypes.union:
      return new _unionBank.default(options);
    case _definitions.CompanyTypes.beinleumi:
      return new _beinleumi.default(options);
    case _definitions.CompanyTypes.massad:
      return new _massad.default(options);
    case _definitions.CompanyTypes.yahav:
      return new _yahav.default(options);
    case _definitions.CompanyTypes.oneZero:
      return new _oneZero.default(options);
    case _definitions.CompanyTypes.behatsdaa:
      return new _behatsdaa.default(options);
    case _definitions.CompanyTypes.pagi:
      return new _pagi.default(options);
    default:
      return (0, _assertNever.assertNever)(options.companyId, `unknown company id ${options.companyId}`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYXNzZXJ0TmV2ZXIiLCJyZXF1aXJlIiwiX2RlZmluaXRpb25zIiwiX2FtZXgiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2JlaGF0c2RhYSIsIl9iZWlubGV1bWkiLCJfYmV5YWhhZEJpc2h2aWxoYSIsIl9kaXNjb3VudCIsIl9oYXBvYWxpbSIsIl9pc3JhY2FyZCIsIl9sZXVtaSIsIl9tYXNzYWQiLCJfbWF4IiwiX21lcmNhbnRpbGUiLCJfbWl6cmFoaSIsIl9vbmVaZXJvIiwiX290c2FySGFoYXlhbCIsIl9wYWdpIiwiX3VuaW9uQmFuayIsIl92aXNhQ2FsIiwiX3lhaGF2IiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY3JlYXRlU2NyYXBlciIsIm9wdGlvbnMiLCJjb21wYW55SWQiLCJDb21wYW55VHlwZXMiLCJoYXBvYWxpbSIsIkhhcG9hbGltU2NyYXBlciIsImxldW1pIiwiTGV1bWlTY3JhcGVyIiwiYmV5YWhhZEJpc2h2aWxoYSIsIkJleWFoYWRCaXNodmlsaGFTY3JhcGVyIiwibWl6cmFoaSIsIk1penJhaGlTY3JhcGVyIiwiZGlzY291bnQiLCJEaXNjb3VudFNjcmFwZXIiLCJtZXJjYW50aWxlIiwiTWVyY2FudGlsZVNjcmFwZXIiLCJvdHNhckhhaGF5YWwiLCJPdHNhckhhaGF5YWxTY3JhcGVyIiwidmlzYUNhbCIsIlZpc2FDYWxTY3JhcGVyIiwibWF4IiwiTWF4U2NyYXBlciIsImlzcmFjYXJkIiwiSXNyYWNhcmRTY3JhcGVyIiwiYW1leCIsIkFtZXhTY3JhcGVyIiwidW5pb24iLCJVbmlvbkJhbmtTY3JhcGVyIiwiYmVpbmxldW1pIiwiQmVpbmxldW1pU2NyYXBlciIsIm1hc3NhZCIsIk1hc3NhZFNjcmFwZXIiLCJ5YWhhdiIsIllhaGF2U2NyYXBlciIsIm9uZVplcm8iLCJPbmVaZXJvU2NyYXBlciIsImJlaGF0c2RhYSIsIkJlaGF0c2RhYVNjcmFwZXIiLCJwYWdpIiwiUGFnaVNjcmFwZXIiLCJhc3NlcnROZXZlciJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JhcGVycy9mYWN0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydE5ldmVyIH0gZnJvbSAnLi4vYXNzZXJ0TmV2ZXInO1xyXG5pbXBvcnQgeyBDb21wYW55VHlwZXMgfSBmcm9tICcuLi9kZWZpbml0aW9ucyc7XHJcbmltcG9ydCBBbWV4U2NyYXBlciBmcm9tICcuL2FtZXgnO1xyXG5pbXBvcnQgQmVoYXRzZGFhU2NyYXBlciBmcm9tICcuL2JlaGF0c2RhYSc7XHJcbmltcG9ydCBCZWlubGV1bWlTY3JhcGVyIGZyb20gJy4vYmVpbmxldW1pJztcclxuaW1wb3J0IEJleWFoYWRCaXNodmlsaGFTY3JhcGVyIGZyb20gJy4vYmV5YWhhZC1iaXNodmlsaGEnO1xyXG5pbXBvcnQgRGlzY291bnRTY3JhcGVyIGZyb20gJy4vZGlzY291bnQnO1xyXG5pbXBvcnQgSGFwb2FsaW1TY3JhcGVyIGZyb20gJy4vaGFwb2FsaW0nO1xyXG5pbXBvcnQgeyB0eXBlIFNjcmFwZXIsIHR5cGUgU2NyYXBlckNyZWRlbnRpYWxzLCB0eXBlIFNjcmFwZXJPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2UnO1xyXG5pbXBvcnQgSXNyYWNhcmRTY3JhcGVyIGZyb20gJy4vaXNyYWNhcmQnO1xyXG5pbXBvcnQgTGV1bWlTY3JhcGVyIGZyb20gJy4vbGV1bWknO1xyXG5pbXBvcnQgTWFzc2FkU2NyYXBlciBmcm9tICcuL21hc3NhZCc7XHJcbmltcG9ydCBNYXhTY3JhcGVyIGZyb20gJy4vbWF4JztcclxuaW1wb3J0IE1lcmNhbnRpbGVTY3JhcGVyIGZyb20gJy4vbWVyY2FudGlsZSc7XHJcbmltcG9ydCBNaXpyYWhpU2NyYXBlciBmcm9tICcuL21penJhaGknO1xyXG5pbXBvcnQgT25lWmVyb1NjcmFwZXIgZnJvbSAnLi9vbmUtemVybyc7XHJcbmltcG9ydCBPdHNhckhhaGF5YWxTY3JhcGVyIGZyb20gJy4vb3RzYXItaGFoYXlhbCc7XHJcbmltcG9ydCBQYWdpU2NyYXBlciBmcm9tICcuL3BhZ2knO1xyXG5pbXBvcnQgVW5pb25CYW5rU2NyYXBlciBmcm9tICcuL3VuaW9uLWJhbmsnO1xyXG5pbXBvcnQgVmlzYUNhbFNjcmFwZXIgZnJvbSAnLi92aXNhLWNhbCc7XHJcbmltcG9ydCBZYWhhdlNjcmFwZXIgZnJvbSAnLi95YWhhdic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTY3JhcGVyKG9wdGlvbnM6IFNjcmFwZXJPcHRpb25zKTogU2NyYXBlcjxTY3JhcGVyQ3JlZGVudGlhbHM+IHtcclxuICBzd2l0Y2ggKG9wdGlvbnMuY29tcGFueUlkKSB7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5oYXBvYWxpbTpcclxuICAgICAgcmV0dXJuIG5ldyBIYXBvYWxpbVNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5sZXVtaTpcclxuICAgICAgcmV0dXJuIG5ldyBMZXVtaVNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5iZXlhaGFkQmlzaHZpbGhhOlxyXG4gICAgICByZXR1cm4gbmV3IEJleWFoYWRCaXNodmlsaGFTY3JhcGVyKG9wdGlvbnMpO1xyXG4gICAgY2FzZSBDb21wYW55VHlwZXMubWl6cmFoaTpcclxuICAgICAgcmV0dXJuIG5ldyBNaXpyYWhpU2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLmRpc2NvdW50OlxyXG4gICAgICByZXR1cm4gbmV3IERpc2NvdW50U2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLm1lcmNhbnRpbGU6XHJcbiAgICAgIHJldHVybiBuZXcgTWVyY2FudGlsZVNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5vdHNhckhhaGF5YWw6XHJcbiAgICAgIHJldHVybiBuZXcgT3RzYXJIYWhheWFsU2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLnZpc2FDYWw6XHJcbiAgICAgIHJldHVybiBuZXcgVmlzYUNhbFNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5tYXg6XHJcbiAgICAgIHJldHVybiBuZXcgTWF4U2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLmlzcmFjYXJkOlxyXG4gICAgICByZXR1cm4gbmV3IElzcmFjYXJkU2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLmFtZXg6XHJcbiAgICAgIHJldHVybiBuZXcgQW1leFNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy51bmlvbjpcclxuICAgICAgcmV0dXJuIG5ldyBVbmlvbkJhbmtTY3JhcGVyKG9wdGlvbnMpO1xyXG4gICAgY2FzZSBDb21wYW55VHlwZXMuYmVpbmxldW1pOlxyXG4gICAgICByZXR1cm4gbmV3IEJlaW5sZXVtaVNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5tYXNzYWQ6XHJcbiAgICAgIHJldHVybiBuZXcgTWFzc2FkU2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLnlhaGF2OlxyXG4gICAgICByZXR1cm4gbmV3IFlhaGF2U2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLm9uZVplcm86XHJcbiAgICAgIHJldHVybiBuZXcgT25lWmVyb1NjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBjYXNlIENvbXBhbnlUeXBlcy5iZWhhdHNkYWE6XHJcbiAgICAgIHJldHVybiBuZXcgQmVoYXRzZGFhU2NyYXBlcihvcHRpb25zKTtcclxuICAgIGNhc2UgQ29tcGFueVR5cGVzLnBhZ2k6XHJcbiAgICAgIHJldHVybiBuZXcgUGFnaVNjcmFwZXIob3B0aW9ucyk7XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gYXNzZXJ0TmV2ZXIob3B0aW9ucy5jb21wYW55SWQsIGB1bmtub3duIGNvbXBh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
"use strict";

var _definitions = require("../definitions");
var _testsUtils = require("../tests/tests-utils");
var _baseScraperWithBrowser = require("./base-scraper-with-browser");
var _behatsdaa = _interopRequireDefault(require("./behatsdaa"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const testsConfig = (0, _testsUtils.getTestsConfig)();
describe('Behatsdaa scraper', () => {
  beforeAll(() => {
    (0, _testsUtils.extendAsyncTimeout)();
  });
  it('should expose login fields in scrapers constant', () => {
    expect(_definitions.SCRAPERS[_definitions.CompanyTypes.behatsdaa]).toBeDefined();
    expect(_definitions.SCRAPERS[_definitions.CompanyTypes.behatsdaa].loginFields).toContain('id');
    expect(_definitions.SCRAPERS[_definitions.CompanyTypes.behatsdaa].loginFields).toContain('password');
  });
  (0, _testsUtils.maybeTestCompanyAPI)(_definitions.CompanyTypes.behatsdaa, config => config.companyAPI.invalidPassword)('should fail on invalid user/password"', async () => {
    const scraper = new _behatsdaa.default({
      ...testsConfig.options,
      companyId: _definitions.CompanyTypes.behatsdaa
    });
    const result = await scraper.scrape({
      id: 'foofoofoo',
      password: 'barbarbar'
    });
    expect(result).toBeDefined();
    expect(result.success).toBeFalsy();
    expect(result.errorType).toBe(_baseScraperWithBrowser.LoginResults.InvalidPassword);
  });
  (0, _testsUtils.maybeTestCompanyAPI)(_definitions.CompanyTypes.behatsdaa)('should scrape transactions', async () => {
    const scraper = new _behatsdaa.default({
      ...testsConfig.options,
      companyId: _definitions.CompanyTypes.behatsdaa
    });
    const result = await scraper.scrape(testsConfig.credentials[_definitions.CompanyTypes.behatsdaa]);
    expect(result).toBeDefined();
    expect(result.errorMessage).toBeFalsy();
    expect(result.errorType).toBeFalsy();
    expect(result.success).toBeTruthy();
    expect(result.accounts).toBeDefined();
    expect(result.accounts).toHaveLength(1);
    (0, _testsUtils.exportTransactions)(_definitions.CompanyTypes.behatsdaa, result.accounts || []);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmaW5pdGlvbnMiLCJyZXF1aXJlIiwiX3Rlc3RzVXRpbHMiLCJfYmFzZVNjcmFwZXJXaXRoQnJvd3NlciIsIl9iZWhhdHNkYWEiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdHNDb25maWciLCJnZXRUZXN0c0NvbmZpZyIsImRlc2NyaWJlIiwiYmVmb3JlQWxsIiwiZXh0ZW5kQXN5bmNUaW1lb3V0IiwiaXQiLCJleHBlY3QiLCJTQ1JBUEVSUyIsIkNvbXBhbnlUeXBlcyIsImJlaGF0c2RhYSIsInRvQmVEZWZpbmVkIiwibG9naW5GaWVsZHMiLCJ0b0NvbnRhaW4iLCJtYXliZVRlc3RDb21wYW55QVBJIiwiY29uZmlnIiwiY29tcGFueUFQSSIsImludmFsaWRQYXNzd29yZCIsInNjcmFwZXIiLCJCZWhhdHNkYWFTY3JhcGVyIiwib3B0aW9ucyIsImNvbXBhbnlJZCIsInJlc3VsdCIsInNjcmFwZSIsImlkIiwicGFzc3dvcmQiLCJzdWNjZXNzIiwidG9CZUZhbHN5IiwiZXJyb3JUeXBlIiwidG9CZSIsIkxvZ2luUmVzdWx0cyIsIkludmFsaWRQYXNzd29yZCIsImNyZWRlbnRpYWxzIiwiZXJyb3JNZXNzYWdlIiwidG9CZVRydXRoeSIsImFjY291bnRzIiwidG9IYXZlTGVuZ3RoIiwiZXhwb3J0VHJhbnNhY3Rpb25zIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NjcmFwZXJzL2JlaGF0c2RhYS50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBhbnlUeXBlcywgU0NSQVBFUlMgfSBmcm9tICcuLi9kZWZpbml0aW9ucyc7XHJcbmltcG9ydCB7IGV4cG9ydFRyYW5zYWN0aW9ucywgZXh0ZW5kQXN5bmNUaW1lb3V0LCBnZXRUZXN0c0NvbmZpZywgbWF5YmVUZXN0Q29tcGFueUFQSSB9IGZyb20gJy4uL3Rlc3RzL3Rlc3RzLXV0aWxzJztcclxuaW1wb3J0IHsgTG9naW5SZXN1bHRzIH0gZnJvbSAnLi9iYXNlLXNjcmFwZXItd2l0aC1icm93c2VyJztcclxuaW1wb3J0IEJlaGF0c2RhYVNjcmFwZXIgZnJvbSAnLi9iZWhhdHNkYWEnO1xyXG5cclxuY29uc3QgdGVzdHNDb25maWcgPSBnZXRUZXN0c0NvbmZpZygpO1xyXG5cclxuZGVzY3JpYmUoJ0JlaGF0c2RhYSBzY3JhcGVyJywgKCkgPT4ge1xyXG4gIGJlZm9yZUFsbCgoKSA9PiB7XHJcbiAgICBleHRlbmRBc3luY1RpbWVvdXQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3Nob3VsZCBleHBvc2UgbG9naW4gZmllbGRzIGluIHNjcmFwZXJzIGNvbnN0YW50JywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KFNDUkFQRVJTW0NvbXBhbnlUeXBlcy5iZWhhdHNkYWFdKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgZXhwZWN0KFNDUkFQRVJTW0NvbXBhbnlUeXBlcy5iZWhhdHNkYWFdLmxvZ2luRmllbGRzKS50b0NvbnRhaW4oJ2lkJyk7XHJcbiAgICBleHBlY3QoU0NSQVBFUlNbQ29tcGFueVR5cGVzLmJlaGF0c2RhYV0ubG9naW5GaWVsZHMpLnRvQ29udGFpbigncGFzc3dvcmQnKTtcclxuICB9KTtcclxuXHJcbiAgbWF5YmVUZXN0Q29tcGFueUFQSShDb21wYW55VHlwZXMuYmVoYXRzZGFhLCBjb25maWcgPT4gY29uZmlnLmNvbXBhbnlBUEkuaW52YWxpZFBhc3N3b3JkKShcclxuICAgICdzaG91bGQgZmFpbCBvbiBpbnZhbGlkIHVzZXIvcGFzc3dvcmRcIicsXHJcbiAgICBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHNjcmFwZXIgPSBuZXcgQmVoYXRzZGFhU2NyYXBlcih7XHJcbiAgICAgICAgLi4udGVzdHNDb25maWcub3B0aW9ucyxcclxuICAgICAgICBjb21wYW55SWQ6IENvbXBhbnlUeXBlcy5iZWhhdHNkYWEsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2NyYXBlci5zY3JhcGUoeyBpZDogJ2Zvb2Zvb2ZvbycsIHBhc3N3b3JkOiAnYmFyYmFyYmFyJyB9KTtcclxuXHJcbiAgICAgIGV4cGVjdChyZXN1bHQpLnRvQmVEZWZpbmVkKCk7XHJcbiAgICAgIGV4cGVjdChyZXN1bHQuc3VjY2VzcykudG9CZUZhbHN5KCk7XHJcbiAgICAgIGV4cGVjdChyZXN1bHQuZXJyb3JUeXBlKS50b0JlKExvZ2luUmVzdWx0cy5JbnZhbGlkUGFzc3dvcmQpO1xyXG4gICAgfSxcclxuICApO1xyXG5cclxuICBtYXliZVRlc3RDb21wYW55QVBJKENvbXBhbnlUeXBlcy5iZWhhdHNkYWEpKCdzaG91bGQgc2NyYXBlIHRyYW5zYWN0aW9ucycsIGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHNjcmFwZXIgPSBuZXcgQmVoYXRzZGFhU2NyYXBlcih7XHJcbiAgICAgIC4uLnRlc3RzQ29uZmlnLm9wdGlvbnMsXHJcbiAgICAgIGNvbXBhbnlJZDogQ29tcGFueVR5cGVzLmJlaGF0c2RhYSxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNjcmFwZXIuc2NyYXBlKHRlc3RzQ29uZmlnLmNyZWRlbnRpYWxzW0NvbXBhbnlUeXBlcy5iZWhhdHNkYWFdKTtcclxuICAgIGV4cGVjdChyZXN1bHQpLnRvQmVEZWZpbmVkKCk7XHJcbiAgICBleHBlY3QocmVzdWx0LmVycm9yTWVzc2FnZSkudG9CZUZhbHN5KCk7XHJcbiAgICBleHBlY3QocmVzdWx0LmVycm9yVHlwZSkudG9CZUZhbHN5KCk7XHJcbiAgICBleHBlY3QocmVzdWx0LnN1Y2Nlc3MpLnRvQmVUcnV0aHkoKTtcclxuICAgIGV4cGVjdChyZXN1bHQuYWNjb3VudHMpLnRvQmVEZWZpbmVkKCk7XHJcbiAgICBleHBlY3QocmVzdWx0LmFjY291bnRzKS50b0hhdmVMZW5ndGgoMSk7XHJcbiAgICBleHBvcnRUcmFuc2FjdGlvbnMoQ29tcGFueVR5cGVzLmJlaGF0c2RhYSwgcmVzdWx0LmFjY291bnRzIHx8IFtdKTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSx1QkFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsVUFBQSxHQUFBQyxzQkFBQSxDQUFBSixPQUFBO0FBQTJDLFNBQUFJLHVCQUFBQyxDQUFBLFdBQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUEsS0FBQUUsT0FBQSxFQUFBRixDQUFBO0FBRTNDLE1BQU1HLFdBQVcsR0FBRyxJQUFBQywwQkFBYyxFQUFDLENBQUM7QUFFcENDLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxNQUFNO0VBQ2xDQyxTQUFTLENBQUMsTUFBTTtJQUNkLElBQUFDLDhCQUFrQixFQUFDLENBQUM7RUFDdEIsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyxpREFBaUQsRUFBRSxNQUFNO0lBQzFEQyxNQUFNLENBQUNDLHFCQUFRLENBQUNDLHlCQUFZLENBQUNDLFNBQVMsQ0FBQyxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDO0lBQ3RESixNQUFNLENBQUNDLHFCQUFRLENBQUNDLHlCQUFZLENBQUNDLFNBQVMsQ0FBQyxDQUFDRSxXQUFXLENBQUMsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQztJQUNwRU4sTUFBTSxDQUFDQyxxQkFBUSxDQUFDQyx5QkFBWSxDQUFDQyxTQUFTLENBQUMsQ0FBQ0UsV0FBVyxDQUFDLENBQUNDLFNBQVMsQ0FBQyxVQUFVLENBQUM7RUFDNUUsQ0FBQyxDQUFDO0VBRUYsSUFBQUMsK0JBQW1CLEVBQUNMLHlCQUFZLENBQUNDLFNBQVMsRUFBRUssTUFBTSxJQUFJQSxNQUFNLENBQUNDLFVBQVUsQ0FBQ0MsZUFBZSxDQUFDLENBQ3RGLHVDQUF1QyxFQUN2QyxZQUFZO0lBQ1YsTUFBTUMsT0FBTyxHQUFHLElBQUlDLGtCQUFnQixDQUFDO01BQ25DLEdBQUdsQixXQUFXLENBQUNtQixPQUFPO01BQ3RCQyxTQUFTLEVBQUVaLHlCQUFZLENBQUNDO0lBQzFCLENBQUMsQ0FBQztJQUVGLE1BQU1ZLE1BQU0sR0FBRyxNQUFNSixPQUFPLENBQUNLLE1BQU0sQ0FBQztNQUFFQyxFQUFFLEVBQUUsV0FBVztNQUFFQyxRQUFRLEVBQUU7SUFBWSxDQUFDLENBQUM7SUFFL0VsQixNQUFNLENBQUNlLE1BQU0sQ0FBQyxDQUFDWCxXQUFXLENBQUMsQ0FBQztJQUM1QkosTUFBTSxDQUFDZSxNQUFNLENBQUNJLE9BQU8sQ0FBQyxDQUFDQyxTQUFTLENBQUMsQ0FBQztJQUNsQ3BCLE1BQU0sQ0FBQ2UsTUFBTSxDQUFDTSxTQUFTLENBQUMsQ0FBQ0MsSUFBSSxDQUFDQyxvQ0FBWSxDQUFDQyxlQUFlLENBQUM7RUFDN0QsQ0FDRixDQUFDO0VBRUQsSUFBQWpCLCtCQUFtQixFQUFDTCx5QkFBWSxDQUFDQyxTQUFTLENBQUMsQ0FBQyw0QkFBNEIsRUFBRSxZQUFZO0lBQ3BGLE1BQU1RLE9BQU8sR0FBRyxJQUFJQyxrQkFBZ0IsQ0FBQztNQUNuQyxHQUFHbEIsV0FBVyxDQUFDbUIsT0FBTztNQUN0QkMsU0FBUyxFQUFFWix5QkFBWSxDQUFDQztJQUMxQixDQUFDLENBQUM7SUFFRixNQUFNWSxNQUFNLEdBQUcsTUFBTUosT0FBTyxDQUFDSyxNQUFNLENBQUN0QixXQUFXLENBQUMrQixXQUFXLENBQUN2Qix5QkFBWSxDQUFDQyxTQUFTLENBQUMsQ0FBQztJQUNwRkgsTUFBTSxDQUFDZSxNQUFNLENBQUMsQ0FBQ1gsV0FBVyxDQUFDLENBQUM7SUFDNUJKLE1BQU0sQ0FBQ2UsTUFBTSxDQUFDVyxZQUFZLENBQUMsQ0FBQ04sU0FBUyxDQUFDLENBQUM7SUFDdkNwQixNQUFNLENBQUNlLE1BQU0sQ0FBQ00sU0FBUyxDQUFDLENBQUNELFNBQVMsQ0FBQyxDQUFDO0lBQ3BDcEIsTUFBTSxDQUFDZSxNQUFNLENBQUNJLE9BQU8sQ0FBQyxDQUFDUSxVQUFVLENBQUMsQ0FBQztJQUNuQzNCLE1BQU0sQ0FBQ2UsTUFBTSxDQUFDYSxRQUFRLENBQUMsQ0FBQ3hCLFdBQVcsQ0FBQyxDQUFDO0lBQ3JDSixNQUFNLENBQUNlLE1BQU0sQ0FBQ2EsUUFBUSxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDLENBQUM7SUFDdkMsSUFBQUMsOEJBQWtCLEVBQUM1Qix5QkFBWSxDQUFDQyxTQUFTLEVBQUVZLE1BQU0sQ0FBQ2EsUUFBUSxJQUFJLEVBQUUsQ0FBQztFQUNuRSxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=